name: Build and Test

on: [workflow_dispatch]

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    name: Linux Latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: cmake -P {0}
      working-directory: ${{github.workspace}}/build
      run: |
        set(ENV{CC} gcc)
        set(ENV{CXX} g++)
        execute_process (
          COMMAND cmake $ENV{GITHUB_WORKSPACE} -DCMAKE_BUILD_TYPE=$ENV{BUILD_TYPE}
        )
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: Linux
        path: ${{ github.workspace }}/build/Terminal
        
  build-macos:
    runs-on: macos-latest
    name: macOS Latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: cmake -P {0}
      working-directory: ${{github.workspace}}/build
      run: |
        set(ENV{CC} clang)
        set(ENV{CXX} clang++)
        execute_process (
          COMMAND cmake $ENV{GITHUB_WORKSPACE} -DCMAKE_BUILD_TYPE=$ENV{BUILD_TYPE}
        )
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: macOS
        path: ${{ github.workspace }}/build/Terminal
        
  build-windows:
    runs-on: windows-latest
    name: Windows Latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: cmake -P {0}
      working-directory: ${{github.workspace}}/build
      run: |
        set(ENV{CC} cl)
        set(ENV{CXX} cl)
        execute_process (
          COMMAND cmake $ENV{GITHUB_WORKSPACE} -DCMAKE_BUILD_TYPE=$ENV{BUILD_TYPE}
        )
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        name: Windows
        path: ${{ github.workspace }}/build/release/Terminal.exe

  test-linux:
    runs-on: ubuntu-latest
    name: Test::Linux
    needs: build-linux
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Download Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: Linux
        path: ${{ github.workspace }}/testing/
 
    - name: Test
      shell: bash
      run: |
        cd ${{ github.workspace }}/testing/
        ./Terminal
#    - name: Test
#      shell: cmake -P {0}
#      run: |
#        execute_process (
#          COMMAND ${{ github.workspace }}/testing/Terminal
#          RESULT_VARIABLE result
#          OUTPUT_VARIABLE output
#          ERROR_VARIABLE output
#          ECHO_OUTPUT_VARIABLE ECHO_ERROR_VARIABLE
#        )

  test-macos:
    runs-on: macos-latest
    name: Test::macOS
    needs: build-macos
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Download Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: macOS
        path: ${{ github.workspace }}/testing
    
    - name: Test
      shell: bash
      run: |
        execute_process (
          COMMAND ${{ github.workspace }}/testing/Terminal
          RESULT_VARIABLE result
          OUTPUT_VARIABLE output
          ERROR_VARIABLE output
          ECHO_OUTPUT_VARIABLE ECHO_ERROR_VARIABLE
        )
      
  test-windows:
    runs-on: windows-latest
    name: Test::Windows
    needs: build-windows
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Download Artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: Windows
        path: ${{ github.workspace }}/testing
    
    - name: Test
      shell: bash
      run: |
        execute_process (
          COMMAND ${{ github.workspace }}/testing/Terminal.exe
          RESULT_VARIABLE result
          OUTPUT_VARIABLE output
          ERROR_VARIABLE output
          ECHO_OUTPUT_VARIABLE ECHO_ERROR_VARIABLE
        )
